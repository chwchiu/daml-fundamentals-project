module Setup where

import Main
import Daml.Script

data TestParties = TestParties with 
    customer : Party 
    restaurant : Party 

setupTestParties : Script TestParties
setupTestParties = script do
    -- 1. Allocate parties with the given display name
    customerParty <- allocatePartyWithHint "Alice" (PartyIdHint "Customer")
    restaurantParty <- allocatePartyWithHint "McDonalds" (PartyIdHint "Restaurant") 

    -- 2. Construct userIds from text
    customerId <- validateUserId "Alice"
    restaurantId <- validateUserId "McDonalds"

    -- 3. Create users with given rights
    createUser (User customerId (Some customerParty)) [CanActAs customerParty]
    createUser (User restaurantId (Some restaurantParty)) [CanActAs restaurantParty]
    return (TestParties with 
        customer = customerParty
        restaurant = restaurantParty)


setupUsers : Script (ContractId Order)
setupUsers = script do 
    testParties@TestParties{customer, restaurant} <- setupTestParties

    -- 4. Set up Inventory 
    inventoryList <- setupInventory customer restaurant

    -- 5. Set up Discounts
    discountsList <- setupDiscounts customer restaurant

    let orderInfo = OrderInfo with 
            shoppingCart = []
            orderStatus = "Not Started"
            diningMode = ""
            discount = 1.0

    submitMulti [customer, restaurant][] do 
        createCmd Order with 
            customer
            restaurant
            orderInfo


setupEmptyOrder : Party -> Party -> Script (ContractId Order)
setupEmptyOrder customer restaurant = do
    let orderInfo = OrderInfo with 
            shoppingCart = []
            orderStatus = "Not Started"
            diningMode = ""
            discount = 0.0

    submitMulti [customer, restaurant][] do 
        createCmd Order with 
            customer
            restaurant
            orderInfo

data MenuInventoryItem = MenuInventoryItem with
    item : MealItem
    cost : Decimal

data DiscountInfo = DiscountInfo with 
    discountCode : Text
    discountPercentage : Decimal 

setupInventory : Party -> Party -> Script [ContractId Item]
setupInventory customer restaurant = do 
    let 
        mealItem1 = MealItem with 
            name = "Burger"
            amount = 3
        mealItem2 = MealItem with 
            name = "Fries"
            amount = 4
        mealItem3 = MealItem with 
            name = "Soda"
            amount = 2
        inventoryItem1 = MenuInventoryItem with
            item = mealItem1
            cost = 4.99
        inventoryItem2 = MenuInventoryItem with
            item = mealItem2
            cost = 1.99
        inventoryItem3 = MenuInventoryItem with
            item = mealItem3
            cost = 2.99
            
        mealItemList = [inventoryItem1, inventoryItem2, inventoryItem3]
    
    mapA (\inventoryItem -> (submit restaurant do createCmd Item with customer, restaurant, itemName = inventoryItem.item.name, price = inventoryItem.cost)) mealItemList


setupDiscounts : Party -> Party -> Script [ContractId Discount]
setupDiscounts customer restaurant = do 
    let 
        discount1 = DiscountInfo with 
            discountCode = "SPRING2023"
            discountPercentage = 0.3
        discount2 = DiscountInfo with 
            discountCode = "CHRISTMAS"
            discountPercentage = 0.5
        discount3 = DiscountInfo with 
            discountCode = "BACK2SCHOOL"
            discountPercentage = 0.3
        discountList = [discount1, discount2, discount3]
    mapA (\discountItem -> (submit restaurant do createCmd Discount with customer, restaurant, discountCode = discountItem.discountCode, discountPercentage = discountItem.discountPercentage)) discountList 

setupTestingEnvironment : Script (TestParties, ContractId Order, [ContractId Item], [ContractId Discount])
setupTestingEnvironment = script do 
    testParties@TestParties{..} <- setupTestParties
    aliceOrderId <- setupEmptyOrder customer restaurant

    -- Initialization of Menu Items
    menuItems <- setupInventory customer restaurant
    
    -- Initialization of Discounts
    discounts <- setupDiscounts customer restaurant 

    return (testParties, aliceOrderId, menuItems, discounts)